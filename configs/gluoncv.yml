run1_gluoncv:
  backend: gluoncv_backend
  backbone: resnet50
  datapath: ~/.kaggle/competitions/ultrasound-nerve-segmentation/smalldataset
  epochs: 10
  batch_size: 2
  optimizer: adam
  loss_function: SoftmaxCrossEntropyLossWithAux
  learn_rate: 0.001
  pretrained: True
  width: 480
  height: 480
  orig_width: 580
  orig_height: 420
  summarysteps: 1
  color_img: True
  gray_mask: True
  shape_augmentation:
    - Affine:
        rotate: -15
    - Affine:
        rotate: 30
    - Affine:
        scale: [0.8, 2.5]
    - Fliplr:
        p: 1.0

  img_augmentation:
    - GaussianBlur:
        sigma: [0, 0.5]
    - AdditiveGaussianNoise:
        scale: 50
  filters:
#    - 'cv2.Canny': [100,200]
#    - 'protoseg.filters.canny.addcanny': [100,200]
#   - 'protoseg.filters.sobel.sobel': [1,0,5]
#    - 'protoseg.filters.sobel.sobel': [0,1]
#    - 'protoseg.filters.laplacian.laplacian': []
#    - 'protoseg.filters.laplacian.addlaplacian': []
    - 'protoseg.filters.morphological.erosion': [5,5,1]
#    - 'protoseg.filters.morphological.dilation': [5,5,2]
#    - 'protoseg.filters.morphological.opening': [5,5,1]
  metrices:
    - 'pixel_accuracy': 'protoseg.metrices.accuracy.pixel_accuracy'
    - 'mean_accuracy': 'protoseg.metrices.accuracy.mean_accuracy'
    - 'dice': 'protoseg.metrices.dice.dice'
    - 'jaccard': 'protoseg.metrices.jaccard.jaccard'
    - 'iou': 'protoseg.metrices.iou.iou'